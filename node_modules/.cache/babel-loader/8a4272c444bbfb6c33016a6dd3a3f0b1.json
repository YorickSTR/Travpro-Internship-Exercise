{"ast":null,"code":"var _jsxFileName = \"/Users/yoricks/Documents/GitHub/travpro-exercise-final/src/Components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker, Spinner } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"50%\",\n  height: \"100vh\"\n};\nconst defaultCenter = {\n  lat: 36.169941,\n  lng: -115.139832\n};\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const [center, setCenter] = useState(defaultCenter);\n  const [zoom, setZoom] = useState(11);\n  const [map, setMap] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBpfyrBMTrgHH3YnaGHxfjEN_w7OXBJoqc\"\n  });\n  const load = useCallback(map => {\n    setMap(map);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    className: \"Map\",\n    ref: load,\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoom,\n    children: items.map(item => {\n      let position = {\n        lat: Number(item.latitude),\n        lng: Number(item.longitude)\n      };\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        className: \"Marker\",\n        position: position\n      }, item.listing_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 6\n  }, this)( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n};\n\n_s(Map, \"OTNJ2gcPbTt2eoYUOV2reDngQHY=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","GoogleMap","useJsApiLoader","Marker","Spinner","containerStyle","width","height","defaultCenter","lat","lng","Map","items","center","setCenter","zoom","setZoom","map","setMap","isLoaded","id","googleMapsApiKey","load","item","position","Number","latitude","longitude","listing_id"],"sources":["/Users/yoricks/Documents/GitHub/travpro-exercise-final/src/Components/Map.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Spinner,\n} from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"50%\",\n  height: \"100vh\",\n};\n\nconst defaultCenter = {\n  lat: 36.169941,\n  lng: -115.139832,\n};\n\nconst Map = ({ items }) => {\n  const [center, setCenter] = useState(defaultCenter);\n  const [zoom, setZoom] = useState(11);\n  const [map, setMap] = useState(null);\n\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBpfyrBMTrgHH3YnaGHxfjEN_w7OXBJoqc\",\n  });\n\n  const load = useCallback((map) => {\n    setMap(map);\n  }, []);\n\n  return isLoaded ? (\n    <GoogleMap\n      className=\"Map\"\n      ref={load}\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={zoom}\n    >\n      {items.map((item) => {\n        let position = {\n          lat: Number(item.latitude),\n          lng: Number(item.longitude),\n        };\n        return (\n          <Marker\n            className=\"Marker\"\n            key={item.listing_id}\n            position={position}\n          />\n        );\n      })}\n    </GoogleMap>\n  ) : (\n    (<Spinner />)(<></>)\n  );\n};\n\nexport default Map;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,MAHF,EAIEC,OAJF,QAKO,wBALP;;;AAOA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,KADc;EAErBC,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,SADe;EAEpBC,GAAG,EAAE,CAAC;AAFc,CAAtB;;AAKA,MAAMC,GAAG,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACQ,aAAD,CAApC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACiB,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,IAAD,CAA9B;EAEA,MAAM;IAAEmB;EAAF,IAAejB,cAAc,CAAC;IAClCkB,EAAE,EAAE,mBAD8B;IAElCC,gBAAgB,EAAE;EAFgB,CAAD,CAAnC;EAKA,MAAMC,IAAI,GAAGxB,WAAW,CAAEmB,GAAD,IAAS;IAChCC,MAAM,CAACD,GAAD,CAAN;EACD,CAFuB,EAErB,EAFqB,CAAxB;EAIA,OAAOE,QAAQ,gBACb,QAAC,SAAD;IACE,SAAS,EAAC,KADZ;IAEE,GAAG,EAAEG,IAFP;IAGE,iBAAiB,EAAEjB,cAHrB;IAIE,MAAM,EAAEQ,MAJV;IAKE,IAAI,EAAEE,IALR;IAAA,UAOGH,KAAK,CAACK,GAAN,CAAWM,IAAD,IAAU;MACnB,IAAIC,QAAQ,GAAG;QACbf,GAAG,EAAEgB,MAAM,CAACF,IAAI,CAACG,QAAN,CADE;QAEbhB,GAAG,EAAEe,MAAM,CAACF,IAAI,CAACI,SAAN;MAFE,CAAf;MAIA,oBACE,QAAC,MAAD;QACE,SAAS,EAAC,QADZ;QAGE,QAAQ,EAAEH;MAHZ,GAEOD,IAAI,CAACK,UAFZ;QAAA;QAAA;QAAA;MAAA,QADF;IAOD,CAZA;EAPH;IAAA;IAAA;IAAA;EAAA,QADa,GAuBb,aAAC,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAD,eAAc,qCAAd,CAvBF;AAyBD,CAvCD;;GAAMjB,G;UAKiBT,c;;;KALjBS,G;AAyCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}