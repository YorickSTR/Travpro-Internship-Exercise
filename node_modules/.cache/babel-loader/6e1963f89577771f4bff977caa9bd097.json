{"ast":null,"code":"var _jsxFileName = \"/Users/yoricks/Documents/GitHub/travpro-exercise-final/src/Components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"50%\",\n  height: \"100vh\"\n};\nconst defaultCenter = {\n  lat: 36.169941,\n  lng: -115.139832\n};\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const [center, setCenter] = useState(defaultCenter);\n  const [zoom, setZoom] = useState(11);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBpfyrBMTrgHH3YnaGHxfjEN_w7OXBJoqc\"\n  });\n  const load = useCallback(map => {\n    setMap(map);\n  }, []);\n  useEffect(() => {\n    if (marker) {\n      setCenter({\n        lat: Number(marker.latitude),\n        lng: Number(marker.longitude)\n      });\n      setZoom(15);\n      console.log(Number(marker.latitude));\n      console.log(Number(marker.longitude));\n    }\n  }, [marker]);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    className: \"Map\",\n    ref: load,\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoom,\n    children: items.map(item => {\n      let position = {\n        lat: Number(item.latitude),\n        lng: Number(item.longitude)\n      };\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        className: \"Marker\",\n        useJsApiLoader: true,\n        position: position\n      }, item.listing_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Map, \"LNRSKpOWLBfYp7xYKUEE2RO6x5A=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","GoogleMap","useJsApiLoader","Marker","containerStyle","width","height","defaultCenter","lat","lng","Map","items","center","setCenter","zoom","setZoom","map","setMap","marker","setMarker","isLoaded","id","googleMapsApiKey","load","Number","latitude","longitude","console","log","item","position","listing_id"],"sources":["/Users/yoricks/Documents/GitHub/travpro-exercise-final/src/Components/Map.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"50%\",\n  height: \"100vh\",\n};\n\nconst defaultCenter = {\n  lat: 36.169941,\n  lng: -115.139832,\n};\n\nconst Map = ({ items }) => {\n  const [center, setCenter] = useState(defaultCenter);\n  const [zoom, setZoom] = useState(11);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState();\n\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBpfyrBMTrgHH3YnaGHxfjEN_w7OXBJoqc\",\n  });\n\n  const load = useCallback((map) => {\n    setMap(map);\n  }, []);\n\n  useEffect(() => {\n    if (marker) {\n      setCenter({\n        lat: Number(marker.latitude),\n        lng: Number(marker.longitude),\n      });\n\n      setZoom(15);\n      console.log(Number(marker.latitude));\n      console.log(Number(marker.longitude));\n    }\n  }, [marker]);\n\n  return isLoaded ? (\n    <GoogleMap\n      className=\"Map\"\n      ref={load}\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={zoom}\n    >\n      {items.map((item) => {\n        let position = {\n          lat: Number(item.latitude),\n          lng: Number(item.longitude),\n        };\n        return (\n          <Marker\n            className=\"Marker\"\n            useJsApiLoader\n            key={item.listing_id}\n            position={position}\n          />\n        );\n      })}\n    </GoogleMap>\n  ) : (\n    <></>\n  );\n};\n\nexport default Map;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,MAApC,QAAkD,wBAAlD;;;AAEA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,KADc;EAErBC,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,SADe;EAEpBC,GAAG,EAAE,CAAC;AAFc,CAAtB;;AAKA,MAAMC,GAAG,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAACO,aAAD,CAApC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,IAAD,CAA9B;EACA,MAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,EAApC;EAEA,MAAM;IAAEoB;EAAF,IAAelB,cAAc,CAAC;IAClCmB,EAAE,EAAE,mBAD8B;IAElCC,gBAAgB,EAAE;EAFgB,CAAD,CAAnC;EAKA,MAAMC,IAAI,GAAGzB,WAAW,CAAEkB,GAAD,IAAS;IAChCC,MAAM,CAACD,GAAD,CAAN;EACD,CAFuB,EAErB,EAFqB,CAAxB;EAIAjB,SAAS,CAAC,MAAM;IACd,IAAImB,MAAJ,EAAY;MACVL,SAAS,CAAC;QACRL,GAAG,EAAEgB,MAAM,CAACN,MAAM,CAACO,QAAR,CADH;QAERhB,GAAG,EAAEe,MAAM,CAACN,MAAM,CAACQ,SAAR;MAFH,CAAD,CAAT;MAKAX,OAAO,CAAC,EAAD,CAAP;MACAY,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACN,MAAM,CAACO,QAAR,CAAlB;MACAE,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACN,MAAM,CAACQ,SAAR,CAAlB;IACD;EACF,CAXQ,EAWN,CAACR,MAAD,CAXM,CAAT;EAaA,OAAOE,QAAQ,gBACb,QAAC,SAAD;IACE,SAAS,EAAC,KADZ;IAEE,GAAG,EAAEG,IAFP;IAGE,iBAAiB,EAAEnB,cAHrB;IAIE,MAAM,EAAEQ,MAJV;IAKE,IAAI,EAAEE,IALR;IAAA,UAOGH,KAAK,CAACK,GAAN,CAAWa,IAAD,IAAU;MACnB,IAAIC,QAAQ,GAAG;QACbtB,GAAG,EAAEgB,MAAM,CAACK,IAAI,CAACJ,QAAN,CADE;QAEbhB,GAAG,EAAEe,MAAM,CAACK,IAAI,CAACH,SAAN;MAFE,CAAf;MAIA,oBACE,QAAC,MAAD;QACE,SAAS,EAAC,QADZ;QAEE,cAAc,MAFhB;QAIE,QAAQ,EAAEI;MAJZ,GAGOD,IAAI,CAACE,UAHZ;QAAA;QAAA;QAAA;MAAA,QADF;IAQD,CAbA;EAPH;IAAA;IAAA;IAAA;EAAA,QADa,gBAwBb,qCAxBF;AA0BD,CAtDD;;GAAMrB,G;UAMiBR,c;;;KANjBQ,G;AAwDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}